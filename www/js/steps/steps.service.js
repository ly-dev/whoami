'use strict';

angular.module('whoamiApp')

.factory('MyDiagnose', ['$q', '$log', 'MY_PARAMS',
    function ($q, $log, MY_PARAMS) {
        var zscoreTabls = {},
            conclusions = [],
            initialized = false,
            service = {},
            determineTable = function (gender, age) {
                var result;
                var tables = zscoreTabls[gender];

                if (tables) {
                    result = tables[(age > 24 ? 1 : 0)];
                    if (result) {
                        return result;
                    }
                }

                //should not be here
                throw 'Unable to determine zscore table (gender:' + gender + ', age:' + age + ').';
            },

            determineWeights = function (gender, age, height) {
                var result;
                var table = determineTable(gender, age);

                if (table) {
                    if (height < 45) {
                        height = 45;
                    }

                    if (height > 120) {
                        height = 120
                    }

                    result = table[height];
                    if (result) {
                        return result;
                    }
                }

                //should not be here
                throw 'Unable to determine weight range (gender:' + gender + ', age:' + age + ', height:' + height + ').';
            },
            determineZScore = function (gender, age, height, weight) {
                var result;
                var weights = determineWeights(gender, age, height);

                if (weights) {
                    for (var i = weights.length - 1; i >= 0; i--) {
                        if (weight >= weights[i]) {
                            break;
                        }
                    }

                    // convert from index to zscore
                    result = i - 3;
                    return result;
                }

                //should not be here
                throw 'Unable to determine zscore (gender:' + gender + ', age:' + age + ', height:' + height + ', weight:' + weight + ').';
            },

            init = function () {
                // avoid double initialize
                if (initialized) {
                    return;
                }

                initialized = true;

                // WHO zscore tables, source: http://www.who.int/childgrowth/standards
                zscoreTabls['boy'] = [
                    {
                        '45': [1.9, 2, 2.2, 2.4, 2.7, 3, 3.3],
                        '45.5': [1.9, 2.1, 2.3, 2.5, 2.8, 3.1, 3.4],
                        '46': [2, 2.2, 2.4, 2.6, 2.9, 3.1, 3.5],
                        '46.5': [2.1, 2.3, 2.5, 2.7, 3, 3.2, 3.6],
                        '47': [2.1, 2.3, 2.5, 2.8, 3, 3.3, 3.7],
                        '47.5': [2.2, 2.4, 2.6, 2.9, 3.1, 3.4, 3.8],
                        '48': [2.3, 2.5, 2.7, 2.9, 3.2, 3.6, 3.9],
                        '48.5': [2.3, 2.6, 2.8, 3, 3.3, 3.7, 4],
                        '49': [2.4, 2.6, 2.9, 3.1, 3.4, 3.8, 4.2],
                        '49.5': [2.5, 2.7, 3, 3.2, 3.5, 3.9, 4.3],
                        '50': [2.6, 2.8, 3, 3.3, 3.6, 4, 4.4],
                        '50.5': [2.7, 2.9, 3.1, 3.4, 3.8, 4.1, 4.5],
                        '51': [2.7, 3, 3.2, 3.5, 3.9, 4.2, 4.7],
                        '51.5': [2.8, 3.1, 3.3, 3.6, 4, 4.4, 4.8],
                        '52': [2.9, 3.2, 3.5, 3.8, 4.1, 4.5, 5],
                        '52.5': [3, 3.3, 3.6, 3.9, 4.2, 4.6, 5.1],
                        '53': [3.1, 3.4, 3.7, 4, 4.4, 4.8, 5.3],
                        '53.5': [3.2, 3.5, 3.8, 4.1, 4.5, 4.9, 5.4],
                        '54': [3.3, 3.6, 3.9, 4.3, 4.7, 5.1, 5.6],
                        '54.5': [3.4, 3.7, 4, 4.4, 4.8, 5.3, 5.8],
                        '55': [3.6, 3.8, 4.2, 4.5, 5, 5.4, 6],
                        '55.5': [3.7, 4, 4.3, 4.7, 5.1, 5.6, 6.1],
                        '56': [3.8, 4.1, 4.4, 4.8, 5.3, 5.8, 6.3],
                        '56.5': [3.9, 4.2, 4.6, 5, 5.4, 5.9, 6.5],
                        '57': [4, 4.3, 4.7, 5.1, 5.6, 6.1, 6.7],
                        '57.5': [4.1, 4.5, 4.9, 5.3, 5.7, 6.3, 6.9],
                        '58': [4.3, 4.6, 5, 5.4, 5.9, 6.4, 7.1],
                        '58.5': [4.4, 4.7, 5.1, 5.6, 6.1, 6.6, 7.2],
                        '59': [4.5, 4.8, 5.3, 5.7, 6.2, 6.8, 7.4],
                        '59.5': [4.6, 5, 5.4, 5.9, 6.4, 7, 7.6],
                        '60': [4.7, 5.1, 5.5, 6, 6.5, 7.1, 7.8],
                        '60.5': [4.8, 5.2, 5.6, 6.1, 6.7, 7.3, 8],
                        '61': [4.9, 5.3, 5.8, 6.3, 6.8, 7.4, 8.1],
                        '61.5': [5, 5.4, 5.9, 6.4, 7, 7.6, 8.3],
                        '62': [5.1, 5.6, 6, 6.5, 7.1, 7.7, 8.5],
                        '62.5': [5.2, 5.7, 6.1, 6.7, 7.2, 7.9, 8.6],
                        '63': [5.3, 5.8, 6.2, 6.8, 7.4, 8, 8.8],
                        '63.5': [5.4, 5.9, 6.4, 6.9, 7.5, 8.2, 8.9],
                        '64': [5.5, 6, 6.5, 7, 7.6, 8.3, 9.1],
                        '64.5': [5.6, 6.1, 6.6, 7.1, 7.8, 8.5, 9.3],
                        '65': [5.7, 6.2, 6.7, 7.3, 7.9, 8.6, 9.4],
                        '65.5': [5.8, 6.3, 6.8, 7.4, 8, 8.7, 9.6],
                        '66': [5.9, 6.4, 6.9, 7.5, 8.2, 8.9, 9.7],
                        '66.5': [6, 6.5, 7, 7.6, 8.3, 9, 9.9],
                        '67': [6.1, 6.6, 7.1, 7.7, 8.4, 9.2, 10],
                        '67.5': [6.2, 6.7, 7.2, 7.9, 8.5, 9.3, 10.2],
                        '68': [6.3, 6.8, 7.3, 8, 8.7, 9.4, 10.3],
                        '68.5': [6.4, 6.9, 7.5, 8.1, 8.8, 9.6, 10.5],
                        '69': [6.5, 7, 7.6, 8.2, 8.9, 9.7, 10.6],
                        '69.5': [6.6, 7.1, 7.7, 8.3, 9, 9.8, 10.8],
                        '70': [6.6, 7.2, 7.8, 8.4, 9.2, 10, 10.9],
                        '70.5': [6.7, 7.3, 7.9, 8.5, 9.3, 10.1, 11.1],
                        '71': [6.8, 7.4, 8, 8.6, 9.4, 10.2, 11.2],
                        '71.5': [6.9, 7.5, 8.1, 8.8, 9.5, 10.4, 11.3],
                        '72': [7, 7.6, 8.2, 8.9, 9.6, 10.5, 11.5],
                        '72.5': [7.1, 7.6, 8.3, 9, 9.8, 10.6, 11.6],
                        '73': [7.2, 7.7, 8.4, 9.1, 9.9, 10.8, 11.8],
                        '73.5': [7.2, 7.8, 8.5, 9.2, 10, 10.9, 11.9],
                        '74': [7.3, 7.9, 8.6, 9.3, 10.1, 11, 12.1],
                        '74.5': [7.4, 8, 8.7, 9.4, 10.2, 11.2, 12.2],
                        '75': [7.5, 8.1, 8.8, 9.5, 10.3, 11.3, 12.3],
                        '75.5': [7.6, 8.2, 8.8, 9.6, 10.4, 11.4, 12.5],
                        '76': [7.6, 8.3, 8.9, 9.7, 10.6, 11.5, 12.6],
                        '76.5': [7.7, 8.3, 9, 9.8, 10.7, 11.6, 12.7],
                        '77': [7.8, 8.4, 9.1, 9.9, 10.8, 11.7, 12.8],
                        '77.5': [7.9, 8.5, 9.2, 10, 10.9, 11.9, 13],
                        '78': [7.9, 8.6, 9.3, 10.1, 11, 12, 13.1],
                        '78.5': [8, 8.7, 9.4, 10.2, 11.1, 12.1, 13.2],
                        '79': [8.1, 8.7, 9.5, 10.3, 11.2, 12.2, 13.3],
                        '79.5': [8.2, 8.8, 9.5, 10.4, 11.3, 12.3, 13.4],
                        '80': [8.2, 8.9, 9.6, 10.4, 11.4, 12.4, 13.6],
                        '80.5': [8.3, 9, 9.7, 10.5, 11.5, 12.5, 13.7],
                        '81': [8.4, 9.1, 9.8, 10.6, 11.6, 12.6, 13.8],
                        '81.5': [8.5, 9.1, 9.9, 10.7, 11.7, 12.7, 13.9],
                        '82': [8.5, 9.2, 10, 10.8, 11.8, 12.8, 14],
                        '82.5': [8.6, 9.3, 10.1, 10.9, 11.9, 13, 14.2],
                        '83': [8.7, 9.4, 10.2, 11, 12, 13.1, 14.3],
                        '83.5': [8.8, 9.5, 10.3, 11.2, 12.1, 13.2, 14.4],
                        '84': [8.9, 9.6, 10.4, 11.3, 12.2, 13.3, 14.6],
                        '84.5': [9, 9.7, 10.5, 11.4, 12.4, 13.5, 14.7],
                        '85': [9.1, 9.8, 10.6, 11.5, 12.5, 13.6, 14.9],
                        '85.5': [9.2, 9.9, 10.7, 11.6, 12.6, 13.7, 15],
                        '86': [9.3, 10, 10.8, 11.7, 12.8, 13.9, 15.2],
                        '86.5': [9.4, 10.1, 11, 11.9, 12.9, 14, 15.3],
                        '87': [9.5, 10.2, 11.1, 12, 13, 14.2, 15.5],
                        '87.5': [9.6, 10.4, 11.2, 12.1, 13.2, 14.3, 15.6],
                        '88': [9.7, 10.5, 11.3, 12.2, 13.3, 14.5, 15.8],
                        '88.5': [9.8, 10.6, 11.4, 12.4, 13.4, 14.6, 15.9],
                        '89': [9.9, 10.7, 11.5, 12.5, 13.5, 14.7, 16.1],
                        '89.5': [10, 10.8, 11.6, 12.6, 13.7, 14.9, 16.2],
                        '90': [10.1, 10.9, 11.8, 12.7, 13.8, 15, 16.4],
                        '90.5': [10.2, 11, 11.9, 12.8, 13.9, 15.1, 16.5],
                        '91': [10.3, 11.1, 12, 13, 14.1, 15.3, 16.7],
                        '91.5': [10.4, 11.2, 12.1, 13.1, 14.2, 15.4, 16.8],
                        '92': [10.5, 11.3, 12.2, 13.2, 14.3, 15.6, 17],
                        '92.5': [10.6, 11.4, 12.3, 13.3, 14.4, 15.7, 17.1],
                        '93': [10.7, 11.5, 12.4, 13.4, 14.6, 15.8, 17.3],
                        '93.5': [10.7, 11.6, 12.5, 13.5, 14.7, 16, 17.4],
                        '94': [10.8, 11.7, 12.6, 13.7, 14.8, 16.1, 17.6],
                        '94.5': [10.9, 11.8, 12.7, 13.8, 14.9, 16.3, 17.7],
                        '95': [11, 11.9, 12.8, 13.9, 15.1, 16.4, 17.9],
                        '95.5': [11.1, 12, 12.9, 14, 15.2, 16.5, 18],
                        '96': [11.2, 12.1, 13.1, 14.1, 15.3, 16.7, 18.2],
                        '96.5': [11.3, 12.2, 13.2, 14.3, 15.5, 16.8, 18.4],
                        '97': [11.4, 12.3, 13.3, 14.4, 15.6, 17, 18.5],
                        '97.5': [11.5, 12.4, 13.4, 14.5, 15.7, 17.1, 18.7],
                        '98': [11.6, 12.5, 13.5, 14.6, 15.9, 17.3, 18.9],
                        '98.5': [11.7, 12.6, 13.6, 14.8, 16, 17.5, 19.1],
                        '99': [11.8, 12.7, 13.7, 14.9, 16.2, 17.6, 19.2],
                        '99.5': [11.9, 12.8, 13.9, 15, 16.3, 17.8, 19.4],
                        '100': [12, 12.9, 14, 15.2, 16.5, 18, 19.6],
                        '100.5': [12.1, 13, 14.1, 15.3, 16.6, 18.1, 19.8],
                        '101': [12.2, 13.2, 14.2, 15.4, 16.8, 18.3, 20],
                        '101.5': [12.3, 13.3, 14.4, 15.6, 16.9, 18.5, 20.2],
                        '102': [12.4, 13.4, 14.5, 15.7, 17.1, 18.7, 20.4],
                        '102.5': [12.5, 13.5, 14.6, 15.9, 17.3, 18.8, 20.6],
                        '103': [12.6, 13.6, 14.8, 16, 17.4, 19, 20.8],
                        '103.5': [12.7, 13.7, 14.9, 16.2, 17.6, 19.2, 21],
                        '104': [12.8, 13.9, 15, 16.3, 17.8, 19.4, 21.2],
                        '104.5': [12.9, 14, 15.2, 16.5, 17.9, 19.6, 21.5],
                        '105': [13, 14.1, 15.3, 16.6, 18.1, 19.8, 21.7],
                        '105.5': [13.2, 14.2, 15.4, 16.8, 18.3, 20, 21.9],
                        '106': [13.3, 14.4, 15.6, 16.9, 18.5, 20.2, 22.1],
                        '106.5': [13.4, 14.5, 15.7, 17.1, 18.6, 20.4, 22.4],
                        '107': [13.5, 14.6, 15.9, 17.3, 18.8, 20.6, 22.6],
                        '107.5': [13.6, 14.7, 16, 17.4, 19, 20.8, 22.8],
                        '108': [13.7, 14.9, 16.2, 17.6, 19.2, 21, 23.1],
                        '108.5': [13.8, 15, 16.3, 17.8, 19.4, 21.2, 23.3],
                        '109': [14, 15.1, 16.5, 17.9, 19.6, 21.4, 23.6],
                        '109.5': [14.1, 15.3, 16.6, 18.1, 19.8, 21.7, 23.8],
                        '110': [14.2, 15.4, 16.8, 18.3, 20, 21.9, 24.1],
                    },
                    {
                        '65': [5.9, 6.3, 6.9, 7.4, 8.1, 8.8, 9.6],
                        '65.5': [6, 6.4, 7, 7.6, 8.2, 8.9, 9.8],
                        '66': [6.1, 6.5, 7.1, 7.7, 8.3, 9.1, 9.9],
                        '66.5': [6.1, 6.6, 7.2, 7.8, 8.5, 9.2, 10.1],
                        '67': [6.2, 6.7, 7.3, 7.9, 8.6, 9.4, 10.2],
                        '67.5': [6.3, 6.8, 7.4, 8, 8.7, 9.5, 10.4],
                        '68': [6.4, 6.9, 7.5, 8.1, 8.8, 9.6, 10.5],
                        '68.5': [6.5, 7, 7.6, 8.2, 9, 9.8, 10.7],
                        '69': [6.6, 7.1, 7.7, 8.4, 9.1, 9.9, 10.8],
                        '69.5': [6.7, 7.2, 7.8, 8.5, 9.2, 10, 11],
                        '70': [6.8, 7.3, 7.9, 8.6, 9.3, 10.2, 11.1],
                        '70.5': [6.9, 7.4, 8, 8.7, 9.5, 10.3, 11.3],
                        '71': [6.9, 7.5, 8.1, 8.8, 9.6, 10.4, 11.4],
                        '71.5': [7, 7.6, 8.2, 8.9, 9.7, 10.6, 11.6],
                        '72': [7.1, 7.7, 8.3, 9, 9.8, 10.7, 11.7],
                        '72.5': [7.2, 7.8, 8.4, 9.1, 9.9, 10.8, 11.8],
                        '73': [7.3, 7.9, 8.5, 9.2, 10, 11, 12],
                        '73.5': [7.4, 7.9, 8.6, 9.3, 10.2, 11.1, 12.1],
                        '74': [7.4, 8, 8.7, 9.4, 10.3, 11.2, 12.2],
                        '74.5': [7.5, 8.1, 8.8, 9.5, 10.4, 11.3, 12.4],
                        '75': [7.6, 8.2, 8.9, 9.6, 10.5, 11.4, 12.5],
                        '75.5': [7.7, 8.3, 9, 9.7, 10.6, 11.6, 12.6],
                        '76': [7.7, 8.4, 9.1, 9.8, 10.7, 11.7, 12.8],
                        '76.5': [7.8, 8.5, 9.2, 9.9, 10.8, 11.8, 12.9],
                        '77': [7.9, 8.5, 9.2, 10, 10.9, 11.9, 13],
                        '77.5': [8, 8.6, 9.3, 10.1, 11, 12, 13.1],
                        '78': [8, 8.7, 9.4, 10.2, 11.1, 12.1, 13.3],
                        '78.5': [8.1, 8.8, 9.5, 10.3, 11.2, 12.2, 13.4],
                        '79': [8.2, 8.8, 9.6, 10.4, 11.3, 12.3, 13.5],
                        '79.5': [8.3, 8.9, 9.7, 10.5, 11.4, 12.4, 13.6],
                        '80': [8.3, 9, 9.7, 10.6, 11.5, 12.6, 13.7],
                        '80.5': [8.4, 9.1, 9.8, 10.7, 11.6, 12.7, 13.8],
                        '81': [8.5, 9.2, 9.9, 10.8, 11.7, 12.8, 14],
                        '81.5': [8.6, 9.3, 10, 10.9, 11.8, 12.9, 14.1],
                        '82': [8.7, 9.3, 10.1, 11, 11.9, 13, 14.2],
                        '82.5': [8.7, 9.4, 10.2, 11.1, 12.1, 13.1, 14.4],
                        '83': [8.8, 9.5, 10.3, 11.2, 12.2, 13.3, 14.5],
                        '83.5': [8.9, 9.6, 10.4, 11.3, 12.3, 13.4, 14.6],
                        '84': [9, 9.7, 10.5, 11.4, 12.4, 13.5, 14.8],
                        '84.5': [9.1, 9.9, 10.7, 11.5, 12.5, 13.7, 14.9],
                        '85': [9.2, 10, 10.8, 11.7, 12.7, 13.8, 15.1],
                        '85.5': [9.3, 10.1, 10.9, 11.8, 12.8, 13.9, 15.2],
                        '86': [9.4, 10.2, 11, 11.9, 12.9, 14.1, 15.4],
                        '86.5': [9.5, 10.3, 11.1, 12, 13.1, 14.2, 15.5],
                        '87': [9.6, 10.4, 11.2, 12.2, 13.2, 14.4, 15.7],
                        '87.5': [9.7, 10.5, 11.3, 12.3, 13.3, 14.5, 15.8],
                        '88': [9.8, 10.6, 11.5, 12.4, 13.5, 14.7, 16],
                        '88.5': [9.9, 10.7, 11.6, 12.5, 13.6, 14.8, 16.1],
                        '89': [10, 10.8, 11.7, 12.6, 13.7, 14.9, 16.3],
                        '89.5': [10.1, 10.9, 11.8, 12.8, 13.9, 15.1, 16.4],
                        '90': [10.2, 11, 11.9, 12.9, 14, 15.2, 16.6],
                        '90.5': [10.3, 11.1, 12, 13, 14.1, 15.3, 16.7],
                        '91': [10.4, 11.2, 12.1, 13.1, 14.2, 15.5, 16.9],
                        '91.5': [10.5, 11.3, 12.2, 13.2, 14.4, 15.6, 17],
                        '92': [10.6, 11.4, 12.3, 13.4, 14.5, 15.8, 17.2],
                        '92.5': [10.7, 11.5, 12.4, 13.5, 14.6, 15.9, 17.3],
                        '93': [10.8, 11.6, 12.6, 13.6, 14.7, 16, 17.5],
                        '93.5': [10.9, 11.7, 12.7, 13.7, 14.9, 16.2, 17.6],
                        '94': [11, 11.8, 12.8, 13.8, 15, 16.3, 17.8],
                        '94.5': [11.1, 11.9, 12.9, 13.9, 15.1, 16.5, 17.9],
                        '95': [11.1, 12, 13, 14.1, 15.3, 16.6, 18.1],
                        '95.5': [11.2, 12.1, 13.1, 14.2, 15.4, 16.7, 18.3],
                        '96': [11.3, 12.2, 13.2, 14.3, 15.5, 16.9, 18.4],
                        '96.5': [11.4, 12.3, 13.3, 14.4, 15.7, 17, 18.6],
                        '97': [11.5, 12.4, 13.4, 14.6, 15.8, 17.2, 18.8],
                        '97.5': [11.6, 12.5, 13.6, 14.7, 15.9, 17.4, 18.9],
                        '98': [11.7, 12.6, 13.7, 14.8, 16.1, 17.5, 19.1],
                        '98.5': [11.8, 12.8, 13.8, 14.9, 16.2, 17.7, 19.3],
                        '99': [11.9, 12.9, 13.9, 15.1, 16.4, 17.9, 19.5],
                        '99.5': [12, 13, 14, 15.2, 16.5, 18, 19.7],
                        '100': [12.1, 13.1, 14.2, 15.4, 16.7, 18.2, 19.9],
                        '100.5': [12.2, 13.2, 14.3, 15.5, 16.9, 18.4, 20.1],
                        '101': [12.3, 13.3, 14.4, 15.6, 17, 18.5, 20.3],
                        '101.5': [12.4, 13.4, 14.5, 15.8, 17.2, 18.7, 20.5],
                        '102': [12.5, 13.6, 14.7, 15.9, 17.3, 18.9, 20.7],
                        '102.5': [12.6, 13.7, 14.8, 16.1, 17.5, 19.1, 20.9],
                        '103': [12.8, 13.8, 14.9, 16.2, 17.7, 19.3, 21.1],
                        '103.5': [12.9, 13.9, 15.1, 16.4, 17.8, 19.5, 21.3],
                        '104': [13, 14, 15.2, 16.5, 18, 19.7, 21.6],
                        '104.5': [13.1, 14.2, 15.4, 16.7, 18.2, 19.9, 21.8],
                        '105': [13.2, 14.3, 15.5, 16.8, 18.4, 20.1, 22],
                        '105.5': [13.3, 14.4, 15.6, 17, 18.5, 20.3, 22.2],
                        '106': [13.4, 14.5, 15.8, 17.2, 18.7, 20.5, 22.5],
                        '106.5': [13.5, 14.7, 15.9, 17.3, 18.9, 20.7, 22.7],
                        '107': [13.7, 14.8, 16.1, 17.5, 19.1, 20.9, 22.9],
                        '107.5': [13.8, 14.9, 16.2, 17.7, 19.3, 21.1, 23.2],
                        '108': [13.9, 15.1, 16.4, 17.8, 19.5, 21.3, 23.4],
                        '108.5': [14, 15.2, 16.5, 18, 19.7, 21.5, 23.7],
                        '109': [14.1, 15.3, 16.7, 18.2, 19.8, 21.8, 23.9],
                        '109.5': [14.3, 15.5, 16.8, 18.3, 20, 22, 24.2],
                        '110': [14.4, 15.6, 17, 18.5, 20.2, 22.2, 24.4],
                        '110.5': [14.5, 15.8, 17.1, 18.7, 20.4, 22.4, 24.7],
                        '111': [14.6, 15.9, 17.3, 18.9, 20.7, 22.7, 25],
                        '111.5': [14.8, 16, 17.5, 19.1, 20.9, 22.9, 25.2],
                        '112': [14.9, 16.2, 17.6, 19.2, 21.1, 23.1, 25.5],
                        '112.5': [15, 16.3, 17.8, 19.4, 21.3, 23.4, 25.8],
                        '113': [15.2, 16.5, 18, 19.6, 21.5, 23.6, 26],
                        '113.5': [15.3, 16.6, 18.1, 19.8, 21.7, 23.9, 26.3],
                        '114': [15.4, 16.8, 18.3, 20, 21.9, 24.1, 26.6],
                        '114.5': [15.6, 16.9, 18.5, 20.2, 22.1, 24.4, 26.9],
                        '115': [15.7, 17.1, 18.6, 20.4, 22.4, 24.6, 27.2],
                        '115.5': [15.8, 17.2, 18.8, 20.6, 22.6, 24.9, 27.5],
                        '116': [16, 17.4, 19, 20.8, 22.8, 25.1, 27.8],
                        '116.5': [16.1, 17.5, 19.2, 21, 23, 25.4, 28],
                        '117': [16.2, 17.7, 19.3, 21.2, 23.3, 25.6, 28.3],
                        '117.5': [16.4, 17.9, 19.5, 21.4, 23.5, 25.9, 28.6],
                        '118': [16.5, 18, 19.7, 21.6, 23.7, 26.1, 28.9],
                        '118.5': [16.7, 18.2, 19.9, 21.8, 23.9, 26.4, 29.2],
                        '119': [16.8, 18.3, 20, 22, 24.1, 26.6, 29.5],
                        '119.5': [16.9, 18.5, 20.2, 22.2, 24.4, 26.9, 29.8],
                        '120': [17.1, 18.6, 20.4, 22.4, 24.6, 27.2, 30.1],
                    },
                ]

                zscoreTabls['girl'] = [
                    {
                        '45': [1.9, 2.1, 2.3, 2.5, 2.7, 3, 3.3],
                        '45.5': [2, 2.1, 2.3, 2.5, 2.8, 3.1, 3.4],
                        '46': [2, 2.2, 2.4, 2.6, 2.9, 3.2, 3.5],
                        '46.5': [2.1, 2.3, 2.5, 2.7, 3, 3.3, 3.6],
                        '47': [2.2, 2.4, 2.6, 2.8, 3.1, 3.4, 3.7],
                        '47.5': [2.2, 2.4, 2.6, 2.9, 3.2, 3.5, 3.8],
                        '48': [2.3, 2.5, 2.7, 3, 3.3, 3.6, 4],
                        '48.5': [2.4, 2.6, 2.8, 3.1, 3.4, 3.7, 4.1],
                        '49': [2.4, 2.6, 2.9, 3.2, 3.5, 3.8, 4.2],
                        '49.5': [2.5, 2.7, 3, 3.3, 3.6, 3.9, 4.3],
                        '50': [2.6, 2.8, 3.1, 3.4, 3.7, 4, 4.5],
                        '50.5': [2.7, 2.9, 3.2, 3.5, 3.8, 4.2, 4.6],
                        '51': [2.8, 3, 3.3, 3.6, 3.9, 4.3, 4.8],
                        '51.5': [2.8, 3.1, 3.4, 3.7, 4, 4.4, 4.9],
                        '52': [2.9, 3.2, 3.5, 3.8, 4.2, 4.6, 5.1],
                        '52.5': [3, 3.3, 3.6, 3.9, 4.3, 4.7, 5.2],
                        '53': [3.1, 3.4, 3.7, 4, 4.4, 4.9, 5.4],
                        '53.5': [3.2, 3.5, 3.8, 4.2, 4.6, 5, 5.5],
                        '54': [3.3, 3.6, 3.9, 4.3, 4.7, 5.2, 5.7],
                        '54.5': [3.4, 3.7, 4, 4.4, 4.8, 5.3, 5.9],
                        '55': [3.5, 3.8, 4.2, 4.5, 5, 5.5, 6.1],
                        '55.5': [3.6, 3.9, 4.3, 4.7, 5.1, 5.7, 6.3],
                        '56': [3.7, 4, 4.4, 4.8, 5.3, 5.8, 6.4],
                        '56.5': [3.8, 4.1, 4.5, 5, 5.4, 6, 6.6],
                        '57': [3.9, 4.3, 4.6, 5.1, 5.6, 6.1, 6.8],
                        '57.5': [4, 4.4, 4.8, 5.2, 5.7, 6.3, 7],
                        '58': [4.1, 4.5, 4.9, 5.4, 5.9, 6.5, 7.1],
                        '58.5': [4.2, 4.6, 5, 5.5, 6, 6.6, 7.3],
                        '59': [4.3, 4.7, 5.1, 5.6, 6.2, 6.8, 7.5],
                        '59.5': [4.4, 4.8, 5.3, 5.7, 6.3, 6.9, 7.7],
                        '60': [4.5, 4.9, 5.4, 5.9, 6.4, 7.1, 7.8],
                        '60.5': [4.6, 5, 5.5, 6, 6.6, 7.3, 8],
                        '61': [4.7, 5.1, 5.6, 6.1, 6.7, 7.4, 8.2],
                        '61.5': [4.8, 5.2, 5.7, 6.3, 6.9, 7.6, 8.4],
                        '62': [4.9, 5.3, 5.8, 6.4, 7, 7.7, 8.5],
                        '62.5': [5, 5.4, 5.9, 6.5, 7.1, 7.8, 8.7],
                        '63': [5.1, 5.5, 6, 6.6, 7.3, 8, 8.8],
                        '63.5': [5.2, 5.6, 6.2, 6.7, 7.4, 8.1, 9],
                        '64': [5.3, 5.7, 6.3, 6.9, 7.5, 8.3, 9.1],
                        '64.5': [5.4, 5.8, 6.4, 7, 7.6, 8.4, 9.3],
                        '65': [5.5, 5.9, 6.5, 7.1, 7.8, 8.6, 9.5],
                        '65.5': [5.5, 6, 6.6, 7.2, 7.9, 8.7, 9.6],
                        '66': [5.6, 6.1, 6.7, 7.3, 8, 8.8, 9.8],
                        '66.5': [5.7, 6.2, 6.8, 7.4, 8.1, 9, 9.9],
                        '67': [5.8, 6.3, 6.9, 7.5, 8.3, 9.1, 10],
                        '67.5': [5.9, 6.4, 7, 7.6, 8.4, 9.2, 10.2],
                        '68': [6, 6.5, 7.1, 7.7, 8.5, 9.4, 10.3],
                        '68.5': [6.1, 6.6, 7.2, 7.9, 8.6, 9.5, 10.5],
                        '69': [6.1, 6.7, 7.3, 8, 8.7, 9.6, 10.6],
                        '69.5': [6.2, 6.8, 7.4, 8.1, 8.8, 9.7, 10.7],
                        '70': [6.3, 6.9, 7.5, 8.2, 9, 9.9, 10.9],
                        '70.5': [6.4, 6.9, 7.6, 8.3, 9.1, 10, 11],
                        '71': [6.5, 7, 7.7, 8.4, 9.2, 10.1, 11.1],
                        '71.5': [6.5, 7.1, 7.7, 8.5, 9.3, 10.2, 11.3],
                        '72': [6.6, 7.2, 7.8, 8.6, 9.4, 10.3, 11.4],
                        '72.5': [6.7, 7.3, 7.9, 8.7, 9.5, 10.5, 11.5],
                        '73': [6.8, 7.4, 8, 8.8, 9.6, 10.6, 11.7],
                        '73.5': [6.9, 7.4, 8.1, 8.9, 9.7, 10.7, 11.8],
                        '74': [6.9, 7.5, 8.2, 9, 9.8, 10.8, 11.9],
                        '74.5': [7, 7.6, 8.3, 9.1, 9.9, 10.9, 12],
                        '75': [7.1, 7.7, 8.4, 9.1, 10, 11, 12.2],
                        '75.5': [7.1, 7.8, 8.5, 9.2, 10.1, 11.1, 12.3],
                        '76': [7.2, 7.8, 8.5, 9.3, 10.2, 11.2, 12.4],
                        '76.5': [7.3, 7.9, 8.6, 9.4, 10.3, 11.4, 12.5],
                        '77': [7.4, 8, 8.7, 9.5, 10.4, 11.5, 12.6],
                        '77.5': [7.4, 8.1, 8.8, 9.6, 10.5, 11.6, 12.8],
                        '78': [7.5, 8.2, 8.9, 9.7, 10.6, 11.7, 12.9],
                        '78.5': [7.6, 8.2, 9, 9.8, 10.7, 11.8, 13],
                        '79': [7.7, 8.3, 9.1, 9.9, 10.8, 11.9, 13.1],
                        '79.5': [7.7, 8.4, 9.1, 10, 10.9, 12, 13.3],
                        '80': [7.8, 8.5, 9.2, 10.1, 11, 12.1, 13.4],
                        '80.5': [7.9, 8.6, 9.3, 10.2, 11.2, 12.3, 13.5],
                        '81': [8, 8.7, 9.4, 10.3, 11.3, 12.4, 13.7],
                        '81.5': [8.1, 8.8, 9.5, 10.4, 11.4, 12.5, 13.8],
                        '82': [8.1, 8.8, 9.6, 10.5, 11.5, 12.6, 13.9],
                        '82.5': [8.2, 8.9, 9.7, 10.6, 11.6, 12.8, 14.1],
                        '83': [8.3, 9, 9.8, 10.7, 11.8, 12.9, 14.2],
                        '83.5': [8.4, 9.1, 9.9, 10.9, 11.9, 13.1, 14.4],
                        '84': [8.5, 9.2, 10.1, 11, 12, 13.2, 14.5],
                        '84.5': [8.6, 9.3, 10.2, 11.1, 12.1, 13.3, 14.7],
                        '85': [8.7, 9.4, 10.3, 11.2, 12.3, 13.5, 14.9],
                        '85.5': [8.8, 9.5, 10.4, 11.3, 12.4, 13.6, 15],
                        '86': [8.9, 9.7, 10.5, 11.5, 12.6, 13.8, 15.2],
                        '86.5': [9, 9.8, 10.6, 11.6, 12.7, 13.9, 15.4],
                        '87': [9.1, 9.9, 10.7, 11.7, 12.8, 14.1, 15.5],
                        '87.5': [9.2, 10, 10.9, 11.8, 13, 14.2, 15.7],
                        '88': [9.3, 10.1, 11, 12, 13.1, 14.4, 15.9],
                        '88.5': [9.4, 10.2, 11.1, 12.1, 13.2, 14.5, 16],
                        '89': [9.5, 10.3, 11.2, 12.2, 13.4, 14.7, 16.2],
                        '89.5': [9.6, 10.4, 11.3, 12.3, 13.5, 14.8, 16.4],
                        '90': [9.7, 10.5, 11.4, 12.5, 13.7, 15, 16.5],
                        '90.5': [9.8, 10.6, 11.5, 12.6, 13.8, 15.1, 16.7],
                        '91': [9.9, 10.7, 11.7, 12.7, 13.9, 15.3, 16.9],
                        '91.5': [10, 10.8, 11.8, 12.8, 14.1, 15.5, 17],
                        '92': [10.1, 10.9, 11.9, 13, 14.2, 15.6, 17.2],
                        '92.5': [10.1, 11, 12, 13.1, 14.3, 15.8, 17.4],
                        '93': [10.2, 11.1, 12.1, 13.2, 14.5, 15.9, 17.5],
                        '93.5': [10.3, 11.2, 12.2, 13.3, 14.6, 16.1, 17.7],
                        '94': [10.4, 11.3, 12.3, 13.5, 14.7, 16.2, 17.9],
                        '94.5': [10.5, 11.4, 12.4, 13.6, 14.9, 16.4, 18],
                        '95': [10.6, 11.5, 12.6, 13.7, 15, 16.5, 18.2],
                        '95.5': [10.7, 11.6, 12.7, 13.8, 15.2, 16.7, 18.4],
                        '96': [10.8, 11.7, 12.8, 14, 15.3, 16.8, 18.6],
                        '96.5': [10.9, 11.8, 12.9, 14.1, 15.4, 17, 18.7],
                        '97': [11, 12, 13, 14.2, 15.6, 17.1, 18.9],
                        '97.5': [11.1, 12.1, 13.1, 14.4, 15.7, 17.3, 19.1],
                        '98': [11.2, 12.2, 13.3, 14.5, 15.9, 17.5, 19.3],
                        '98.5': [11.3, 12.3, 13.4, 14.6, 16, 17.6, 19.5],
                        '99': [11.4, 12.4, 13.5, 14.8, 16.2, 17.8, 19.6],
                        '99.5': [11.5, 12.5, 13.6, 14.9, 16.3, 18, 19.8],
                        '100': [11.6, 12.6, 13.7, 15, 16.5, 18.1, 20],
                        '100.5': [11.7, 12.7, 13.9, 15.2, 16.6, 18.3, 20.2],
                        '101': [11.8, 12.8, 14, 15.3, 16.8, 18.5, 20.4],
                        '101.5': [11.9, 13, 14.1, 15.5, 17, 18.7, 20.6],
                        '102': [12, 13.1, 14.3, 15.6, 17.1, 18.9, 20.8],
                        '102.5': [12.1, 13.2, 14.4, 15.8, 17.3, 19, 21],
                        '103': [12.3, 13.3, 14.5, 15.9, 17.5, 19.2, 21.3],
                        '103.5': [12.4, 13.5, 14.7, 16.1, 17.6, 19.4, 21.5],
                        '104': [12.5, 13.6, 14.8, 16.2, 17.8, 19.6, 21.7],
                        '104.5': [12.6, 13.7, 15, 16.4, 18, 19.8, 21.9],
                        '105': [12.7, 13.8, 15.1, 16.5, 18.2, 20, 22.2],
                        '105.5': [12.8, 14, 15.3, 16.7, 18.4, 20.2, 22.4],
                        '106': [13, 14.1, 15.4, 16.9, 18.5, 20.5, 22.6],
                        '106.5': [13.1, 14.3, 15.6, 17.1, 18.7, 20.7, 22.9],
                        '107': [13.2, 14.4, 15.7, 17.2, 18.9, 20.9, 23.1],
                        '107.5': [13.3, 14.5, 15.9, 17.4, 19.1, 21.1, 23.4],
                        '108': [13.5, 14.7, 16, 17.6, 19.3, 21.3, 23.6],
                        '108.5': [13.6, 14.8, 16.2, 17.8, 19.5, 21.6, 23.9],
                        '109': [13.7, 15, 16.4, 18, 19.7, 21.8, 24.2],
                        '109.5': [13.9, 15.1, 16.5, 18.1, 20, 22, 24.4],
                        '110': [14, 15.3, 16.7, 18.3, 20.2, 22.3, 24.7],

                    },
                    {
                        '65': [5.6, 6.1, 6.6, 7.2, 7.9, 8.7, 9.7],
                        '65.5': [5.7, 6.2, 6.7, 7.4, 8.1, 8.9, 9.8],
                        '66': [5.8, 6.3, 6.8, 7.5, 8.2, 9, 10],
                        '66.5': [5.8, 6.4, 6.9, 7.6, 8.3, 9.1, 10.1],
                        '67': [5.9, 6.4, 7, 7.7, 8.4, 9.3, 10.2],
                        '67.5': [6, 6.5, 7.1, 7.8, 8.5, 9.4, 10.4],
                        '68': [6.1, 6.6, 7.2, 7.9, 8.7, 9.5, 10.5],
                        '68.5': [6.2, 6.7, 7.3, 8, 8.8, 9.7, 10.7],
                        '69': [6.3, 6.8, 7.4, 8.1, 8.9, 9.8, 10.8],
                        '69.5': [6.3, 6.9, 7.5, 8.2, 9, 9.9, 10.9],
                        '70': [6.4, 7, 7.6, 8.3, 9.1, 10, 11.1],
                        '70.5': [6.5, 7.1, 7.7, 8.4, 9.2, 10.1, 11.2],
                        '71': [6.6, 7.1, 7.8, 8.5, 9.3, 10.3, 11.3],
                        '71.5': [6.7, 7.2, 7.9, 8.6, 9.4, 10.4, 11.5],
                        '72': [6.7, 7.3, 8, 8.7, 9.5, 10.5, 11.6],
                        '72.5': [6.8, 7.4, 8.1, 8.8, 9.7, 10.6, 11.7],
                        '73': [6.9, 7.5, 8.1, 8.9, 9.8, 10.7, 11.8],
                        '73.5': [7, 7.6, 8.2, 9, 9.9, 10.8, 12],
                        '74': [7, 7.6, 8.3, 9.1, 10, 11, 12.1],
                        '74.5': [7.1, 7.7, 8.4, 9.2, 10.1, 11.1, 12.2],
                        '75': [7.2, 7.8, 8.5, 9.3, 10.2, 11.2, 12.3],
                        '75.5': [7.2, 7.9, 8.6, 9.4, 10.3, 11.3, 12.5],
                        '76': [7.3, 8, 8.7, 9.5, 10.4, 11.4, 12.6],
                        '76.5': [7.4, 8, 8.7, 9.6, 10.5, 11.5, 12.7],
                        '77': [7.5, 8.1, 8.8, 9.6, 10.6, 11.6, 12.8],
                        '77.5': [7.5, 8.2, 8.9, 9.7, 10.7, 11.7, 12.9],
                        '78': [7.6, 8.3, 9, 9.8, 10.8, 11.8, 13.1],
                        '78.5': [7.7, 8.4, 9.1, 9.9, 10.9, 12, 13.2],
                        '79': [7.8, 8.4, 9.2, 10, 11, 12.1, 13.3],
                        '79.5': [7.8, 8.5, 9.3, 10.1, 11.1, 12.2, 13.4],
                        '80': [7.9, 8.6, 9.4, 10.2, 11.2, 12.3, 13.6],
                        '80.5': [8, 8.7, 9.5, 10.3, 11.3, 12.4, 13.7],
                        '81': [8.1, 8.8, 9.6, 10.4, 11.4, 12.6, 13.9],
                        '81.5': [8.2, 8.9, 9.7, 10.6, 11.6, 12.7, 14],
                        '82': [8.3, 9, 9.8, 10.7, 11.7, 12.8, 14.1],
                        '82.5': [8.4, 9.1, 9.9, 10.8, 11.8, 13, 14.3],
                        '83': [8.5, 9.2, 10, 10.9, 11.9, 13.1, 14.5],
                        '83.5': [8.5, 9.3, 10.1, 11, 12.1, 13.3, 14.6],
                        '84': [8.6, 9.4, 10.2, 11.1, 12.2, 13.4, 14.8],
                        '84.5': [8.7, 9.5, 10.3, 11.3, 12.3, 13.5, 14.9],
                        '85': [8.8, 9.6, 10.4, 11.4, 12.5, 13.7, 15.1],
                        '85.5': [8.9, 9.7, 10.6, 11.5, 12.6, 13.8, 15.3],
                        '86': [9, 9.8, 10.7, 11.6, 12.7, 14, 15.4],
                        '86.5': [9.1, 9.9, 10.8, 11.8, 12.9, 14.2, 15.6],
                        '87': [9.2, 10, 10.9, 11.9, 13, 14.3, 15.8],
                        '87.5': [9.3, 10.1, 11, 12, 13.2, 14.5, 15.9],
                        '88': [9.4, 10.2, 11.1, 12.1, 13.3, 14.6, 16.1],
                        '88.5': [9.5, 10.3, 11.2, 12.3, 13.4, 14.8, 16.3],
                        '89': [9.6, 10.4, 11.4, 12.4, 13.6, 14.9, 16.4],
                        '89.5': [9.7, 10.5, 11.5, 12.5, 13.7, 15.1, 16.6],
                        '90': [9.8, 10.6, 11.6, 12.6, 13.8, 15.2, 16.8],
                        '90.5': [9.9, 10.7, 11.7, 12.8, 14, 15.4, 16.9],
                        '91': [10, 10.9, 11.8, 12.9, 14.1, 15.5, 17.1],
                        '91.5': [10.1, 11, 11.9, 13, 14.3, 15.7, 17.3],
                        '92': [10.2, 11.1, 12, 13.1, 14.4, 15.8, 17.4],
                        '92.5': [10.3, 11.2, 12.1, 13.3, 14.5, 16, 17.6],
                        '93': [10.4, 11.3, 12.3, 13.4, 14.7, 16.1, 17.8],
                        '93.5': [10.5, 11.4, 12.4, 13.5, 14.8, 16.3, 17.9],
                        '94': [10.6, 11.5, 12.5, 13.6, 14.9, 16.4, 18.1],
                        '94.5': [10.7, 11.6, 12.6, 13.8, 15.1, 16.6, 18.3],
                        '95': [10.8, 11.7, 12.7, 13.9, 15.2, 16.7, 18.5],
                        '95.5': [10.8, 11.8, 12.8, 14, 15.4, 16.9, 18.6],
                        '96': [10.9, 11.9, 12.9, 14.1, 15.5, 17, 18.8],
                        '96.5': [11, 12, 13.1, 14.3, 15.6, 17.2, 19],
                        '97': [11.1, 12.1, 13.2, 14.4, 15.8, 17.4, 19.2],
                        '97.5': [11.2, 12.2, 13.3, 14.5, 15.9, 17.5, 19.3],
                        '98': [11.3, 12.3, 13.4, 14.7, 16.1, 17.7, 19.5],
                        '98.5': [11.4, 12.4, 13.5, 14.8, 16.2, 17.9, 19.7],
                        '99': [11.5, 12.5, 13.7, 14.9, 16.4, 18, 19.9],
                        '99.5': [11.6, 12.7, 13.8, 15.1, 16.5, 18.2, 20.1],
                        '100': [11.7, 12.8, 13.9, 15.2, 16.7, 18.4, 20.3],
                        '100.5': [11.9, 12.9, 14.1, 15.4, 16.9, 18.6, 20.5],
                        '101': [12, 13, 14.2, 15.5, 17, 18.7, 20.7],
                        '101.5': [12.1, 13.1, 14.3, 15.7, 17.2, 18.9, 20.9],
                        '102': [12.2, 13.3, 14.5, 15.8, 17.4, 19.1, 21.1],
                        '102.5': [12.3, 13.4, 14.6, 16, 17.5, 19.3, 21.4],
                        '103': [12.4, 13.5, 14.7, 16.1, 17.7, 19.5, 21.6],
                        '103.5': [12.5, 13.6, 14.9, 16.3, 17.9, 19.7, 21.8],
                        '104': [12.6, 13.8, 15, 16.4, 18.1, 19.9, 22],
                        '104.5': [12.8, 13.9, 15.2, 16.6, 18.2, 20.1, 22.3],
                        '105': [12.9, 14, 15.3, 16.8, 18.4, 20.3, 22.5],
                        '105.5': [13, 14.2, 15.5, 16.9, 18.6, 20.5, 22.7],
                        '106': [13.1, 14.3, 15.6, 17.1, 18.8, 20.8, 23],
                        '106.5': [13.3, 14.5, 15.8, 17.3, 19, 21, 23.2],
                        '107': [13.4, 14.6, 15.9, 17.5, 19.2, 21.2, 23.5],
                        '107.5': [13.5, 14.7, 16.1, 17.7, 19.4, 21.4, 23.7],
                        '108': [13.7, 14.9, 16.3, 17.8, 19.6, 21.7, 24],
                        '108.5': [13.8, 15, 16.4, 18, 19.8, 21.9, 24.3],
                        '109': [13.9, 15.2, 16.6, 18.2, 20, 22.1, 24.5],
                        '109.5': [14.1, 15.4, 16.8, 18.4, 20.3, 22.4, 24.8],
                        '110': [14.2, 15.5, 17, 18.6, 20.5, 22.6, 25.1],
                        '110.5': [14.4, 15.7, 17.1, 18.8, 20.7, 22.9, 25.4],
                        '111': [14.5, 15.8, 17.3, 19, 20.9, 23.1, 25.7],
                        '111.5': [14.7, 16, 17.5, 19.2, 21.2, 23.4, 26],
                        '112': [14.8, 16.2, 17.7, 19.4, 21.4, 23.6, 26.2],
                        '112.5': [15, 16.3, 17.9, 19.6, 21.6, 23.9, 26.5],
                        '113': [15.1, 16.5, 18, 19.8, 21.8, 24.2, 26.8],
                        '113.5': [15.3, 16.7, 18.2, 20, 22.1, 24.4, 27.1],
                        '114': [15.4, 16.8, 18.4, 20.2, 22.3, 24.7, 27.4],
                        '114.5': [15.6, 17, 18.6, 20.5, 22.6, 25, 27.8],
                        '115': [15.7, 17.2, 18.8, 20.7, 22.8, 25.2, 28.1],
                        '115.5': [15.9, 17.3, 19, 20.9, 23, 25.5, 28.4],
                        '116': [16, 17.5, 19.2, 21.1, 23.3, 25.8, 28.7],
                        '116.5': [16.2, 17.7, 19.4, 21.3, 23.5, 26.1, 29],
                        '117': [16.3, 17.8, 19.6, 21.5, 23.8, 26.3, 29.3],
                        '117.5': [16.5, 18, 19.8, 21.7, 24, 26.6, 29.6],
                        '118': [16.6, 18.2, 19.9, 22, 24.2, 26.9, 29.9],
                        '118.5': [16.8, 18.4, 20.1, 22.2, 24.5, 27.2, 30.3],
                        '119': [16.9, 18.5, 20.3, 22.4, 24.7, 27.4, 30.6],
                        '119.5': [17.1, 18.7, 20.5, 22.6, 25, 27.7, 30.9],
                        '120': [17.3, 18.9, 20.7, 22.8, 25.2, 28, 31.2],
                    }
                ];

                conclusions = [
                    {
                        'conclusion': 'COMPLICATED SEVERE ACUTE MALNUTRITION',
                        'action': 'Give first dose appropriate antibiotic; Treat the child to prevent low blood sugar; Keep the child warm; Refer URGENTLY to hospital'
                    },
                    {
                        'conclusion': 'UNCOMPLICATED SEVERE ACUTE MALNUTRITION',
                        'action': 'Give oral antibiotics for 5 days; Give ready-to-use therapeutic food for a child aged 6 months or more; Counsel the mother on how to feed the child; Assess for possible TB infection; Advise mother when to return immediately; Follow up in 7 days'
                    },
                    {
                        'conclusion': 'MODERATE ACUTE MALNUTRITION',
                        'action': 'Assess the child\'s feeding and counsel the mother on the feeding recommendations; If feeding problem, follow up in 7 days; Assess for possible TB infection; Advise mother when to return immediately; Follow-up in 30 days'
                    },
                    {
                        'conclusion': 'NO ACUTE MALNUTRITION',
                        'action': 'If child is less than 2 years old, assess the child\'s feeding and counsel the mother on feeding according to the feeding recommendations; If feeding problem, follow-up in 7 days'
                    },
                ];
            };


        service.getInitialHeight = function (gender, age) {
            var table = determineTable(gender, age);
            var keys = Object.keys(table);
            return keys[Math.floor(keys.length / 2)];
        };

        service.getInitialWeight = function (gender, age, height) {
            var weights = determineWeights(gender, age, height);
            return weights[3];
        };

        service.getZScore = function (gender, age, height, weight) {
            return determineZScore(gender, age, height, weight / 1000);
        };

        service.getReport = function (data) {
            var index = 0;

            if (data['oedema'] == 0) { // no oedema of both feet
                var index1 = 0; // judge from zscore
                var zscore = determineZScore(data['gender'], data['age'], data['height'], data['weight'] / 1000);
                if (zscore >= -3) {
                    if (zscore >= -2) {
                        index1 = 3;
                    } else {
                        index1 = 2;
                    }
                } else { // zscore < -3
                    // AND any one of the following: Medical complication present or Not able to finish RUTF or Breastfeeding problem.
                    if (data['rutf'] == 0 || data['mcp'] == 1 || data['bfp'] == 1) {
                        index1 = 0;

                    } else {
                        index1 = 1;
                    }
                }

                var index2 = 0; // judge from muac
                var muac = data['muac'];
                if (muac >= 115) {
                    if (muac >= 125) {
                        index2 = 3;
                    } else {
                        index2 = 2;
                    }
                } else { // muac < 115cm
                    // AND any one of the following: Medical complication present or Not able to finish RUTF or Breastfeeding problem.
                    if (data['rutf'] == 0 || data['mcp'] == 1 || data['bfp'] == 1) {
                        index2 = 0;

                    } else {
                        index2 = 1;
                    }
                }

                // choose the bigger result
                index = index1 > index2 ? index1 : index2;
            }

            return conclusions[index];
        };

        init();

        return service;

}])

.factory('MySteps', ['$q', '$log', '$state', 'MY_PARAMS', 'MyDiagnose',
    function ($q, $log, $state, MY_PARAMS, myDiagnose) {
        var initialized = false,
            template = {},
            startStep = 'introduction',
            previousSteps = [],
            currentStep = 'introduction',
            result = {},

            service = {},

            switchState = function (step, value) {
                $log.debug('MySteps.switchState' + ' step:' + step + ' value:' + value);

                var route = template[step].state(value);
                $state.go(route.to, route.params);
            };

        service.init = function () {
            // avoid double initialize
            if (initialized) {
                return;
            }

            initialized = true;

            template = {
                'introduction': {
                    'title': 'WHOAMI',
                    'shortText': 'Introduction',
                    'longText': 'This app will collect data and give diagnostic proposal according to the World Health Organization Acute Malnutrition guide.',
                    'next': function (value) {
                        return 'oedema';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.briefing',
                            params: {
                                step: 'introduction'
                            },
                        };
                    },
                },
                'oedema': {
                    'title': 'STEP ONE',
                    'shortText': 'Oedema',
                    'longText': 'Oedema of both feet?',
                    'options': [
                        [
                            {
                                key: 1,
                                value: 'YES'
                            },
                            {
                                key: 0,
                                value: 'NO'
                            },
                        ],
                    ],
                    'summary': function (value) {
                        return (value == 1 ? 'Found oedema of both feet' : 'Not found oedema of both feet');
                    },
                    'next': function (value) {
                        return (value == 1 ? 'summary' : 'gender');
                    },
                    'state': function (value) {
                        return {
                            to: 'app.choice',
                            params: {
                                step: 'oedema'
                            },
                        };
                    },
                },
                'gender': {
                    'title': 'STEP TWO',
                    'shortText': 'Gender',
                    'longText': 'Boy or girl?',
                    'options': [
                        [
                            {
                                key: 'boy',
                                value: 'Boy'
                            },
                            {
                                key: 'girl',
                                value: 'Girl'
                            },
                        ],
                    ],
                    'summary': function (value) {
                        return (value == 'boy' ? 'Boy' : 'Girl');
                    },
                    'next': function (value) {
                        return 'age';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.choice',
                            params: {
                                step: 'gender'
                            },
                        };
                    },
                },
                'age': {
                    'title': 'STEP THREE',
                    'shortText': 'Age',
                    'longText': 'How old is the child?',
                    'options': {
                        'myValue': function () {
                            if (result['age']) {
                                return result['age'];
                            }

                            return 24;
                        },
                        'myMin': 0,
                        'myMax': 60,
                        'myScale': function (v) {
                            return v;
                        },
                        'myFormat': function (v) {
                            var y = parseInt(v / 12);
                            var m = v - y * 12;
                            return (v > 0 ? (y > 0 ? y + 'yr' : '') + (m > 0 ? m + 'm' : '') : '0m');
                        },
                    },
                    'summary': function (value) {
                        var y = parseInt(value / 12);
                        var m = value - y * 12;
                        return (value > 0 ? (y > 0 ? y + ' year ' : '') + (m > 0 ? m + ' month' : '') : '0 month') + ' old';
                    },
                    'next': function (value) {
                        return 'height';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.knob',
                            params: {
                                step: 'age'
                            },
                        };
                    },
                },
                'height': {
                    'title': 'STEP FOUR',
                    'shortText': 'Height',
                    'longText': 'The child\'s height is',
                    'options': {
                        'myValue': function () {
                            if (result['height']) {
                                return result['height'];
                            }

                            return myDiagnose.getInitialHeight (result['gender'], result['age']);
                        },
                        'myMin': 45,
                        'myMax': 120,
                        'myScale': function (v) {
                            return v * 0.5;
                        },
                        'myFormat': function (v) {
                            return (Math.floor(v) < v ? v : v + '.0') + 'cm';
                        },
                    },
                    'summary': function (value) {
                        return value + 'cm tall';
                    },
                    'next': function (value) {
                        return 'weight';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.knob',
                            params: {
                                step: 'height'
                            },
                        };
                    },
                },
                'weight': {
                    'title': 'STEP FIVE',
                    'shortText': 'Weight',
                    'longText': 'The child\'s weight is',
                    'options': {
                        'myValue': function () {
                            var weight = myDiagnose.getInitialWeight(result['gender'], result['age'], result['height']);
                            return weight * 1000;
                        },
                        'myMin': 1900,
                        'myMax': 30100,
                        'myScale': function (v) {
                            return v * 100;
                        },
                        'myFormat': function (v) {
                            v = v / 1000;
                            return (Math.floor(v) < v ? v : v + '.0') + 'kg';
                        },
                    },
                    'summary': function (value) {
                        return value / 1000 + 'kg weight';
                    },
                    'next': function (value) {
                        var zscore = myDiagnose.getZScore(result['gender'], result['age'], result['height'], result['weight']);
                        return (zscore < -3 ? 'rutf' : 'muac');
                    },
                    'state': function (value) {
                        return {
                            to: 'app.knob',
                            params: {
                                step: 'weight'
                            },
                        };
                    },
                },
                'muac': {
                    'title': 'STEP SIX',
                    'shortText': 'MUAC',
                    'longText': 'The child\'s mid-upper arm circumference (MUAC) is',
                    'options': {
                        'myValue': 115,
                        'myMin': 0,
                        'myScale': function (v) {
                            return v;
                        },
                        'myFormat': function (v) {
                            return v + 'cm';
                        },
                    },
                    'summary': function (value) {
                        return value + 'cm MUAC';
                    },
                    'next': function (value) {
                        return (value > 115 ? 'summary' : 'rutf');
                    },
                    'state': function (value) {
                        return {
                            to: 'app.knob',
                            params: {
                                step: 'muac'
                            },
                        };
                    },
                },
                'rutf': {
                    'title': 'STEP SEVEN',
                    'shortText': 'Ready-to-Use Therapeutic Food',
                    'longText': 'Is the child able to finish Ready-to-Use Therapeutic Food?',
                    'options': [
                        [
                            {
                                key: 1,
                                value: 'YES'
                            },
                            {
                                key: 0,
                                value: 'NO'
                            },
                        ],
                    ],
                    'summary': function (value) {
                        return (value == 0 ? 'Not able to finish RUTF' : 'Able to finish RUTF');
                    },
                    'next': function (value) {
                        return (value == 0 ? 'summary' : 'mcp');
                    },
                    'state': function (value) {
                        return {
                            to: 'app.choice',
                            params: {
                                step: 'rutf'
                            },
                        };
                    },
                },
                'mcp': {
                    'title': 'STEP EIGHT',
                    'shortText': 'Medical Complication Present',
                    'longText': 'Does the child have medical complication present?',
                    'options': [
                        [
                            {
                                key: 1,
                                value: 'YES'
                            },
                            {
                                key: 0,
                                value: 'NO'
                            },
                        ],
                    ],
                    'summary': function (value) {
                        return (value == 0 ? 'No medical complication present' : 'Medical complication present');
                    },
                    'next': function (value) {
                        return (value == 1 ? 'summary' : 'bfp');
                    },
                    'state': function (value) {
                        return {
                            to: 'app.choice',
                            params: {
                                step: 'mcp'
                            },
                        };
                    },
                },
                'bfp': {
                    'title': 'STEP HINE',
                    'shortText': 'Breastfeeding Problem',
                    'longText': 'Does the child have breastfeeding problem?',
                    'options': [
                        [
                            {
                                key: 1,
                                value: 'YES'
                            },
                            {
                                key: 0,
                                value: 'NO'
                            },
                        ],
                    ],
                    'summary': function (value) {
                        return (value == 0 ? 'No breastfeeding problem' : 'Breastfeeding problem');
                    },
                    'next': function (value) {
                        return 'summary';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.choice',
                            params: {
                                step: 'bfp'
                            },
                        };
                    },
                },
                'summary': {
                    'title': 'Summary',
                    'shortText': 'Collected Information',
                    'next': function (value) {
                        return 'diagnose';
                    },
                    'state': function (value) {
                        return {
                            to: 'app.summary',
                        };
                    },
                },
                'diagnose': {
                    'title': 'Diagnose',
                    'shortText': 'Nutritional Status',
                    'state': function (value) {
                        return {
                            to: 'app.diagnose',
                        };
                    },
                },
            }
        };


        service.hasPreviousStep = function () {
            return (previousSteps.length > 0);
        };

        service.getCurrentStepTemplate = function () {
            return service.getStepTempate(currentStep);
        };

        service.getStepTempate = function (step) {
            return template[step];
        };

        // Restart all steps
        service.restart = function (skipIntro) {
            previousSteps = [];
            currentStep = startStep;
            result = {};
            if (skipIntro) {
                service.next();
            } else {
                switchState(currentStep, null);
            }
        };

        // Switch to previous step state
        service.prev = function () {
            if (previousSteps.length > 0) {
                currentStep = previousSteps.pop();
                var value = (previousSteps.length > 0 ? result[previousSteps[previousSteps.length - 1]] : null);
                switchState(currentStep, value);
            }
        };

        // keep value and switch to next step state
        service.next = function (value) {

            if (value != null) {
                result[currentStep] = value;
            }

            previousSteps.push(currentStep);
            currentStep = template[currentStep].next(value);

            switchState(currentStep, value);
        };

        service.getResult = function () {
            return result;
        };

        service.getReport = function () {
            return myDiagnose.getReport(result);
        }

        service.getStepSummary = function (step) {
            var func = function (value, key) {
                return key + ' = ' + value;
            };

            if (template[step] && template[step]['summary'] && angular.isFunction(template[step]['summary'])) {
                func = template[step]['summary'];
            }

            return func;
        };

        return service;
    }]);
